@using BlackHoles;
@using System.Web.Mvc.Html;
@using System.Web.Mvc;

@helper TableRowButtons(object routeValues)
{
  <td nowrap>
    <a href='@Url.Action("Edit",    routeValues)' class="btn btn-primary btn-xs" title = "Изменить" ><img width="20" height="20" src='@Url.Content("~/Images/Edit-white.svg")' /></a>
    <a href='@Url.Action("Details", routeValues)' class="btn btn-primary btn-xs" title = "Просмотор"><img width="20" height="20" src='@Url.Content("~/Images/View-white.svg")' /></a>
    @if (!User.IsInRole(Constants.EditorRole) || User.IsInRole(Constants.AdminRole))
    {
      <a href='@Url.Action("Delete", routeValues)' class="btn btn-primary btn-xs" title = "Удалить"  ><img width="20" height="20" src='@Url.Content("~/Images/Delete-white.svg")' /></a>
    }
  </td>
}

@helper BackButton()
{
  <a href='@Url.Action("Index")' class="btn btn-primary" title="Назад (без сохранения)"><img width="20" height="20" src='@Url.Content("~/Images/Back-white.svg")'/></a>
}

@helper AutoTranslate(string fieldName)
{
  @:Перевод на английский язык. <a style="cursor: pointer;" onclick="return onTranslate('Rus@(fieldName)', 'Enu@(fieldName)');">Перевести соответствующее русскоязычное поле Яндекс Переводчиком</a>.
}

@helper Review(bool isFieldDesc)
{
  <p>
    Рецензия или отзыв ученого совета, в которых должны <b>обязательно</b> содержаться слова: «<b>Статья рекомендуется для публикации в открытой печати.</b>».
    @if (isFieldDesc)
    {
      <p>
        В данном поле необходимо предоставить текст рецензии/отзыва в форматах: <code>.doc</code> (приоритетный формат), <code>.docx</code>, <code>.rtf</code>, <code>.txt</code>.
        Это не должно быть изображение помещенное в <code>.doc</code>!
      </p>
    }
    else
    {
      <p>
        Рецензия/отзыв предоставляется в текстовом виде и в виде фото/скана документа с подписями и печатями учреждения.
      </p>
    }
  </p>
  <p>В рецензии/отзыве обосновываются: актуальность, новизна, теоретическая (научная) или практическая значимость.</p>
  <p>
    Для аспирантов и соискателей ученой степени требуется предоставить рецензию научного руководителя, рекомендующего данную статью к опубликованию.
    Для кандидатов и докторов наук требуется предоставить отзыв научного консультанта.
    Вместо отзыва научного консультанта или руководителя можно предоставить отзыв ведущего специалиста по данной тематике или решение ученого совета учреждения,
    где написана статья.
  </p>
}

@helper FreePublication()
{
  <p>
    Если вы или ваша организация/ВУЗ подписаны на наш журнал, вы или один представитель организации/ВУЗа имеет право <b>на одну</b> бесплатную публикацию (на каждый подписной экземпляр),
    в каждом номере подписного периода. Например, если ваш ВУЗ подписан на три экземпляра, то от вашего ВУЗа можно бесплатно опубликовать три статьи.
    Для этого вам нужно прислать (на адрес <a href="mailto:vladdq@yandex.ru">vladdq@yandex.ru</a>) скан или фотографию документов, удостоверяющих подписку (договор/контракт).
    Право на бесплатную публикацию получают первые лица, приславшие копию подтверждающих документов.
  </p>
  <p>Если число представленных в текущий номер статей превышает число подписанных организацией/ВУЗом экземпляров, редакция в праве отказать на бесплатную публикацию.</p>
}

@helper Antiplagiat()
{
  <a href="http://www.antiplagiat.ru" target="_blank">antiplagiat.ru</a>
}

@helper HomeTab(string action)
{
  <ul class="nav nav-tabs">
    @for (int i = 0; i < _homeTabs.GetLength(0); i++)
    {
      var attr = _homeTabs[i, 0].Equals(action, StringComparison.OrdinalIgnoreCase) ? " class = active" : "";
      <li@(attr)>@Html.ActionLink(_homeTabs[i, 1], _homeTabs[i, 0])</li@(attr)>
    }
  </ul>
}

@helper HomeLinks(string action)
{
  <p>
    @for (int i = 0; i < _homeTabs.GetLength(0); i++)
    {
      if (_homeTabs[i, 0].Equals(action, StringComparison.OrdinalIgnoreCase))
      {
        continue;
      }

      @Html.ActionLink(_homeTabs[i, 1], _homeTabs[i, 0])<br />
    }
  </p>
}

@functions {
  static string[,] _homeTabs = new string[,]
  {
    { "Requirements",           "Требования" },
    { "FormattingRequirements", "Требования по оформлению" },
    { "Antiplagiat",            "Антиплагиат" },
    { "Conditions",             "Условия и права" },
  };

  protected static new System.Web.Mvc.HtmlHelper Html
  {
    get { return ((System.Web.Mvc.WebViewPage)WebPageContext.Current.Page).Html; }
  }

  protected static UrlHelper Url
  {
    get { return ((System.Web.Mvc.WebViewPage)WebPageContext.Current.Page).Url; }
  }
}
