@using BlackHoles.DataContexts
@using BlackHoles.Utils
@using Microsoft.AspNet.Identity
@using Constants = BlackHoles.Constants
@if (Request.IsAuthenticated)
{
  var db = new IssuesDb();
  var user = User.GetApplicationUser(db);
  var roles = new List<string>();
  if (User.IsInRole(Constants.AdminRole))
  {
    roles.Add("администратор");
  }
  if (User.IsInRole(Constants.EditorRole))
  {
    roles.Add("редактор");
  }
  var userRoles = "Роли: " + string.Join(", ", roles);

  using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
  {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
      <li><a href='@Url.Action("Index", "Manage")' title='Управление пользователем: @user.UserName. Email: @(user.Email). @userRoles'><span class="glyphicon glyphicon glyphicon-cog" aria-hidden="true"></span>&nbsp;@user.UserName</a></li>
      <li><a href="javascript:document.getElementById('logoutForm').submit()">Выйти</a></li>
    </ul>
  }
}
else
{
  <ul class="nav navbar-nav navbar-right">
    <li>@Html.ActionLink("Зарегистрироваться", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
    <li>@Html.ActionLink("Войти", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
  </ul>
}
