@using BlackHoles.DataContexts;
@using BlackHoles.Models;
@using BlackHoles.Utils;
@using System.Security.Principal;
@model Article

@{
  IssuesDb db = new IssuesDb();
  var isCreating = (bool)ViewBag.Create;
  var title = isCreating ? "Создание запроса на публикацию статьи" : "Редактирование запроса на публикацию статьи";
  var isEditor = User.IsInRole(Constants.EditorRole);
}

<h2 class="text-center"><b>@ViewBag.Title</b></h2>

@using (Html.BeginForm(isCreating ? "Create" : "Edit", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  @Html.AntiForgeryToken()
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  @Html.HiddenFor(model => model.Id)
  <table class="table">
    <tbody>
      <tr>
        <td width="5%">@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td width="60%">
          @if (User.IsInRole(Constants.EditorRole))
          {
            @Html.EnumDropDownListFor(x => x.Status, "Выберите значение статуса...", new { @class = "form-control" })
          }
          else
          {
            @Html.EnumDropDownListFor(x => x.Status, "Выберите значение статуса...", new { @class = "form-control", @readonly = "readonly", disabled = "disabled" })
          }
          @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </td>
        <td width="35%"></td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td width="50%" colspan="2">
          @{
            var lst = new List<SelectListItem>()
          {
            new SelectListItem() { Text="Выберите номер специальности...", Disabled=true, Selected=true },
            new SelectListItem() { Value="12.00.01", Text="12.00.01 – Теория и история права и государства; история учений о праве и государстве" },
            new SelectListItem() { Value="12.00.02", Text="12.00.02 – Конституционное право; конституционный судебный процесс; муниципальное право" },
            new SelectListItem() { Value="12.00.03", Text="12.00.03 – Гражданское право; предпринимательское право; семейное право; международное частное право" },
            new SelectListItem() { Value="12.00.04", Text="12.00.04 – Финансовое право; налоговое право; бюджетное право" },
            new SelectListItem() { Value="12.00.05", Text="12.00.05 – Трудовое право; право социального обеспечения" },
            new SelectListItem() { Value="12.00.06", Text="12.00.06 – Земельное право; природоресурсное право; экологическое право; аграрное право" },
            new SelectListItem() { Value="12.00.07", Text="12.00.07 – Корпоративное право; энергетическое право" },
            new SelectListItem() { Value="12.00.08", Text="12.00.08 – Уголовное право и криминология; уголовно - исполнительное право" },
            new SelectListItem() { Value="12.00.09", Text="12.00.09 – Уголовный процесс" },
            new SelectListItem() { Value="12.00.10", Text="12.00.10 – Международное право; Европейское право" },
            new SelectListItem() { Value="12.00.11", Text="12.00.11 – Судебная деятельность, прокурорская деятельность, правозащитная и правоохранительная деятельность" },
            new SelectListItem() { Value="12.00.12", Text="12.00.12 – Криминалистика; судебно - экспертная деятельность; оперативно - розыскная деятельность" },
            new SelectListItem() { Value="12.00.13", Text="12.00.13 – Информационное право" },
            new SelectListItem() { Value="12.00.14", Text="12.00.14 – Административное право; административный процесс" },
            new SelectListItem() { Value="12.00.15", Text="12.00.15 – Гражданский процесс; арбитражный процесс" },
          };
          }
          @Html.DropDownListFor(model => model.Specialty, lst, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
        </td>
        @*<td width="40%"></td>*@
      </tr>

      <tr>
        <td colspan="3" class="alert alert-info"><h4>Следующие поля заплняются на <b>русском</b> языке:</h4></td>
      </tr>

      <tr>
        <td width="5%">@Html.LabelFor(model => model.RusArtTitles, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td width="60%">
          @Html.EditorFor(model => model.RusArtTitles, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.RusArtTitles, "", new { @class = "text-danger" })
        </td>
        <td width="35%"></td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.Authors, "Автор(ы)", htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.HiddenFor(model => model.AuthorsIds)
          @Html.Partial("AuthorList", Model.AuthorsViewModel)
        </td>
        <td>Выбирите автора из выпадающего списка, чтобы добавить его в статью. Добавить описание авторов можно на странице @Html.ActionLink("Авторы статей", "Index", "Authors", null, new { @class = "btn btn-primary btn-xs", target = "_blank" }).</td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.ShortArtTitles, htmlAttributes: new { @class = "control-label col-md-2", title = "Отображается в списке статей и используется для именования файла." })</td>
        <td>
          @Html.EditorFor(model => model.ShortArtTitles, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.ShortArtTitles, "", new { @class = "text-danger" })
        </td>
        <td>Краткое (сокращенное) название статьи. Оно будет использоваться для отображения в списка, для именования файла статьи и колонтитуле. 
            Недопускается использовать символы: <code>\</code>, <code>/</code>, <code>:</code>, <code>|</code>,
          <code>&lt;</code>, <code>&gt;</code>, <code>?</code>, <code>"</code> и <code>*</code>.</td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.RusAbstract, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.EditorFor(model => model.RusAbstract, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
          @Html.ValidationMessageFor(model => model.RusAbstract, "", new { @class = "text-danger" })
        </td>
        <td>Краткое описание статьи. В среднем 500 печатных символов (ГОСТ 7.9-95 СИБИД). Максимум @Html.MaximumLengthFor(model => model.RusAbstract) 
          символов (включая непечатные).
          Аннотация должна отражать: предмет, тему, цель работы, метод или методологию, область применения результатов. Может содержать выводы.
          Помните, что аннотация доступна в Интернет и, что она является рекламой вашей работы!
          <a href="http://cyberleninka.ru/article/n/kakoy-dolzhna-byt-annotatsiya-k-nauchnoy-statie" target="_blank">Подробнее</a>.</td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.RusKeywords, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.EditorFor(model => model.RusKeywords, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.RusKeywords, "", new { @class = "text-danger" })
        </td>
        <td>2-6 слов/словосочетаний) разделенные точкой с запятой или запятой (не смешивать!). Ключевые слова не должны быть предложениями содержащими множество слов. Оптимально 1-3 слова. <a href="http://cyberleninka.ru/article/n/podbor-klyuchevyh-slov-dlya-nauchnoy-stati" target="_blank">Подробнее</a>.
        </td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.References, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.EditorFor(model => model.References, new { htmlAttributes = new { @class = "form-control", rows = "10", style = "white-space:nowrap;overflow:scroll;" } })
          @Html.ValidationMessageFor(model => model.References, "", new { @class = "text-danger" })
        </td>
        <td>
          Каждое вхождение в списке должно отделяться новой строкой. Список должен быть пронумерован с еденицы. 
          <a href="http://www.k-press.ru/bh/requirements.htm#citation" target="_blank">Рекомендации</a> по цитированию и сноскам.
        </td> 
      </tr>

      <tr>
        <td colspan="3" class="alert alert-info"><h4>Следующие поля заплняются на <b>английском</b> языке:</h4></td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.EnuArtTitles, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.EditorFor(model => model.EnuArtTitles, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.EnuArtTitles, "", new { @class = "text-danger" })
        </td>
        <td>@Shared.AutoTranslate("ArtTitles")</td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.EnuAbstract, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.EditorFor(model => model.EnuAbstract, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
          @Html.ValidationMessageFor(model => model.EnuAbstract, "", new { @class = "text-danger" })
        </td>
        <td>@Shared.AutoTranslate("Abstract")</td>
      </tr>

      <tr>
        <td>@Html.LabelFor(model => model.EnuKeywords, htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.EditorFor(model => model.EnuKeywords, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.EnuKeywords, "", new { @class = "text-danger" })
        </td>
        <td>@Shared.AutoTranslate("Keywords")</td>
      </tr>

      @if (!isCreating)
      {
        <tr>
          <td>@Html.Label("Загруженные файлы", htmlAttributes: new { @class = "control-label col-md-2" })</td>
          <td>
            <div class="@dangerIfZero(Model.ArticleVersions)">Загружено версий текста статьи: @Model.ArticleVersions.@filePrompt(Model.ArticleVersions)</div>
            <div class="@dangerIfZero(Model.ReviewTextVersions)">Загружено версий текста рецензии/решения ученого совета: @Model.ReviewTextVersions.@filePrompt(Model.ReviewTextVersions)</div>
            <div class="@dangerIfZero(Model.ReviewImgVersions)">Загружено версий фото/скана рецензии/решения ученого совета: @Model.ReviewImgVersions.@filePrompt(Model.ReviewImgVersions)</div>
          </td>
        </tr>
      }
      <tr>
        <td colspan="3">Файлы для загрузки:</td>
      </tr>
      <tr>
        <td>@Html.Label("Файл статьи", htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          <input type="file" name="articleFile" id="articleFile" accept=".doc,.rtf,.txt,.docx" class="filestyle" data-placeholder="файл не выбран!" data-buttonBefore="true" data-buttonText="Выберите файл статьи..." />
          @Html.ValidationMessage("articleFile", "", new { @class = "text-danger" })
        </td>
        <td>Должен содержать только текст статьи, без метаданных (аннотации, ключевых слов, списка литераруры, информации об авторах и т.п.). 
        Допустимые форматы: <code>.doc</code> - MS Word 97-2003 (предпочтительный формат), <code>.docx</code>, <code>.rtf</code>, <code>.txt</code>. 
        <a href="http://www.k-press.ru/bh/requirements.htm#citation" target="_blank">Рекомендации</a> по сноскам/цитатам.</td>
      </tr>
      <tr>
        <td>@Html.Label("Текст рецензии", htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
        <input type="file" name="additionalTextFile" id="additionalText" accept=".doc,.rtf,.txt,.docx" class="filestyle" data-placeholder="файл не выбран!" data-buttonBefore="true" data-buttonText="Выберите файл рецензии (текст)..." />
        </td>
        <td>Рецензия в текстовом виде: <code>.doc</code>, <code>.docx</code>, <code>.rtf</code>, <code>.txt</code>. Это не должно быть изображение помещенное в .doc.</td>
      </tr>
      <tr>
        <td>@Html.Label("Фото/скан рецензии", htmlAttributes: new { @class = "control-label col-md-2" })</td>
        <td>
          @Html.ValidationMessage("additionalImg", "", new { @class = "text-danger" })
          <input type="file" name="additionalImg1" id="additionalImg1" accept=".png,.gif,.jpg,.jpeg,.tiff,.pdf" class="filestyle" data-placeholder="файл не выбран!" data-buttonBefore="true" data-buttonText="Выберите файл рецензии (фото/скан)..." />
          <input type="file" name="additionalImg2" id="additionalImg2" accept=".png,.gif,.jpg,.jpeg,.tiff,.pdf" class="filestyle" data-placeholder="файл не выбран!" data-buttonBefore="true" data-buttonText="Выберите второй файл рецензии (фото/скан)..." />
        </td>
        <td>Рецензия в виде изобраения: <code>.png</code>, <code>.gif</code>, <code>.jpeg</code>, <code>.tiff</code>, <code>.pdf</code>. 
        Желательно, чтобы это был один файл. Если у вас два файла, добавьте второй файл в поле ниже.
        Если файл один, не заполняйте нижнее поле.</td>
      </tr>

      <tr>
        <td colspan="3">
          <div class="checkbox lead">
            <label>
              @Html.CheckBoxFor(m => m.Agreed) Авторы статьи <span class="labelx label2-important">ознакомились</span> 
              с <a href="http://www.k-press.ru/bh/requirements.htm" target="_blank">требованиями к статьям</a>,
              <a href="http://www.k-press.ru/bh/conditions.htm" target="_blank">порядком и условиями публикации статей, правами и обязанностями авторов</a>,
              <a href="http://www.k-press.ru/bh/oferta.html" target="_blank">публичнаой офертой</a>, 
              <span class="labelx label2-agree">согласны</span> с описанными по приведенным ссылкам уловиями. 
              Устанавливая этот флажок, <span class="labelx label2-important">авторы производят акцепт</span> публичной 
              <a href="http://www.k-press.ru/bh/oferta.html" target="_blank">оферты</a>, и <span class="labelx label2-agree">соглашаются</span> 
              на обработку своих персональных данных.
            </label>
          </div>
          @Html.ValidationMessageFor(m => m.Agreed, "", new { @class = "text-danger alert" })
        </td>
      </tr>

      <tr>
        <td colspan="3" nowrap>
          <h4>Комментарии:</h4>
          <table width="100%">
            <tr>
              <td width="100%">
          @{ ViewBag.ArticleId = Model.Id; }
          @Html.EditorFor(model => model.CurrentMessageText, new { htmlAttributes = new { @class = "form-control", rows = "3", spellcheck = "true", placeholder = "Введите текст коментария, если хотите сообщить дополнительную информацию...", style = "margin-left: 10px; width: 100%; margin-bottom: 10px;" } })
          @Html.ValidationMessage("commentsValidation", "", new { @class = "text-danger" })
              </td>
              <td>
                @if (!isCreating)
                {
                  <input type="button" id="addCommentButton" title="Нажмите на кномку чтобы добавить (сохранить) комментарий" value="Комментировать" class="btn btn-primary" onclick="return addComment(@Model.Id, -1);" />
                }
              </td>
            </tr>
          </table>
          @if (Model.Messages != null)
          {
            @Html.Partial("MessageTree", Model.Messages.OrderByDescending(m => m.Created))
          }
        </td>
      </tr>

      <tr>
        <td colspan="3">
          @Shared.BackButton()&nbsp;&nbsp;<input type="submit" value="Сохранить" title="Сохранение и просмотреть результат" class="btn btn-primary" />
        </td>
      </tr>
    </tbody>
  </table>
}

@helper dangerIfZero(int count)
{
  @(count == 0 ? "text-danger" : "text-success")
}
@helper filePrompt(int count)
{
  if (count == 0)
  {
    @: <b>Загрузите файл!</b>
  }
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/Scripts/bootstrap-filestyle.js")
  @Scripts.Render("~/Scripts/Article.js")
}

@section ExtendJqueryRangeValidator
{
  <script>
  </script>
}
