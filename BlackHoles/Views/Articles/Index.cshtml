@using BlackHoles.Models;
@using BlackHoles.Utils;
@model IEnumerable<Article>

@{
  var title = "Публикуемые статьи";
  ViewBag.Title = title;
}

<div style="max-width: 1200px; margin: auto;">
  <h2>@title</h2>

  @if (User.IsInRole(Constants.EditorRole))
  {
    var articles = Model.ToList();
    <div>
      <dl class="dl-horizontal">
        <dt>Всего статей:</dt>
        <dd>@articles.Count</dd>

        <dt>Принятых статей:</dt>
        <dd>@articles.Count(a => a.Status >= ArticleStatus.Accepted)</dd>

        <dt>Требует проверки:</dt>
        <dd>@articles.Count(a => a.Status == ArticleStatus.RequiresVerification)</dd>

        <dt>Требует ответа:</dt>
        <dd>@articles.Count(a => a.Status == ArticleStatus.AddedToAntiplagiat)</dd>

        <dt>С ошибками:</dt>
        <dd>@articles.Count(a => a.Status == ArticleStatus.HasErrors)</dd>
      </dl>
    </div>
  }

  <p>
    @Html.ActionLink("Доабавить статью", "Create", null, new { @class = "btn btn-primary" })
  </p>
  <table class="table table-hover">
    <tr>
      @if (User.IsInRole(Constants.EditorRole))
      {
        <th>@Html.DisplayNameFor(model => model.Id)</th>
      }
      <th>@Html.DisplayNameFor(model => model.Status)</th>
      <th>@Html.DisplayName("№")</th>
      <th>@Html.DisplayNameFor(model => model.Authors)</th>
      <th>@Html.DisplayNameFor(model => model.ShortArtTitles)</th>
      <th>@Html.DisplayNameFor(model => model.Created)</th>
      <th>@Html.DisplayNameFor(model => model.Modified)</th>
      <th>@Html.DisplayNameFor(model => model.ArticleDate)</th>
      <th>@Html.Label("Файлы")</th>
      @if (User.IsInRole(Constants.EditorRole))
      {
        <th>Зарегистрировал</th>
      }
      <th></th>
    </tr>

    @foreach (var article in Model)
    {
      var trClass = "";
      switch (article.Status)
      {
        case ArticleStatus.HasErrors: trClass = "danger"; break;
        case ArticleStatus.Accepted:  trClass = "success"; break;
        case ArticleStatus.Paid:      trClass = "success"; break;
      }
      <tr class="@trClass">
        @if (User.IsInRole(Constants.EditorRole))
        {
          <td>@Html.DisplayFor(modelItem => article.Id)</td>
        }
        <td><span class="@article.Status">@Html.DisplayFor(modelItem => article.Status)</span></td>
        <td>@Html.DisplayFor(m => article.IssueYear) @Html.DisplayFor(m => article.IssueNumber)</td>
        <td>@article.GetAuthorsBriefFios()</td>
        <td>@Html.DisplayFor(m => article.ShortArtTitles)</td>
        <td>@Html.DisplayFor(m => article.Created)</td>
        <td>@Html.DisplayFor(m => article.Modified)</td>
        <td>@Html.DisplayFor(m => article.ArticleDate)</td>
        <td>
          @Html.CheckBox("ArticleVersions", article.ArticleVersions > 0, new { Title = $"Загружено версий статьи:  {article.ArticleVersions}", @readonly = "readonly", disabled = "disabled" })
          @Html.CheckBox("ReviewTextVersions", article.ReviewTextVersions > 0, new { Title = $"Загружено текстовых версий рецензий или отзывов ученого совета: {article.ReviewTextVersions}", @readonly = "readonly", disabled = "disabled" })
          @Html.CheckBox("ReviewImgVersions", article.ReviewImgVersions > 0, new { Title = $"Загружено фото-версий рецензий или отзывов ученого совета: {article.ReviewImgVersions}", @readonly = "readonly", disabled = "disabled" })
        </td>
        @if (User.IsInRole(Constants.EditorRole))
        {
          <td>@Html.DisplayFor(modelItem => article.Owner.UserName) (@Html.DisplayFor(modelItem => article.Owner.Email))</td>
        }
        @Shared.TableRowButtons(new { id = article.Id })
      </tr>
    }
  </table>
</div>